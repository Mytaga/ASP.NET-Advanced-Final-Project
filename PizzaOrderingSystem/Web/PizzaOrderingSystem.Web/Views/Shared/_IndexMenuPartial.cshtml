@using PizzaOrderingSystem.Common
@using PizzaOrderingSystem.Web.ViewModels.ProductViewModels;
@model PizzaOrderingSystem.Web.ViewModels.ProductViewModels.AllProductsQueryModel

<nav class="navbar navbar-expand-lg navbar-dark bg-dark text-white" style="font-size: 20px">
    <div class="container-fluid">
        <a class="navbar-brand ms-lg-3 text-white" asp-action="Index" style="font-size: 25px">MENU</a>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0 justify-content-center">
                <li class="nav-item">
                    <a class="nav-link btn btn-link text-white" asp-action="IndexPizza">PIZZA</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link btn btn-link text-white" asp-action="IndexSalads">SALADS</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link btn btn-link text-white" asp-action="IndexDesserts">DESSERTS</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link btn btn-link text-white" asp-action="IndexDrinks">DRINKS</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link btn btn-link text-white" asp-action="IndexSauces">SAUCES</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link btn btn-link text-white" asp-action="IndexPasta">PASTA</a>
                </li>
            </ul>
            <form class="d-flex input-group w-auto" method="get" asp-controller="Product" asp-action="Index">
                @if (Model.SearchQuery == null)
                {
                    <input type="text" class="form-control rounded" name="search" placeholder="Search....">
                }
                else
                {
                    <input type="text" name="search" class="form-control" value="@Model.SearchQuery">
                }
                <span class="input-group-text text-white border-0" id="search-addon">
                    <button class="btn btn-lg btn-white" type="submit">
                        Search
                    </button>
                </span>
            </form>
        </div>
    </div>
</nav>


@if (Model.Products.Any())
{
    <div class="row row-cols-1 row-cols-md-3 g-4 mt-2">
        @foreach (var item in Model.Products)
        {
        <div class="col">
            <div class="card h-100 bg-dark text-white mb-3" style="max-width: 28rem">
                <img src="@item.ImageUrl" class="img-fluid rounded-start" alt="image">
                <div class="card-body">
                    <h5 class="card-title text-white">@item.Name</h5>
                    <h5 class="card-title">@item.Price лв.</h5>
                    <p class="card-text">@item.Description</p>
                    <div class="mt-4">
                        <a class="btn btn-white" asp-controller="Product" asp-action="Details" asp-route-id="@item.Id">Details</a>
                        @if (User.IsInRole(GlobalConstants.UserRoleName))
                        {
                            <a class="btn btn-white" asp-controller="ShoppingCart" asp-action="Add" asp-route-id="@item.Id">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-basket3-fill" viewBox="0 0 16 16">
                                    <path d="M5.757 1.071a.5.5 0 0 1 .172.686L3.383 6h9.234L10.07 1.757a.5.5 0 1 1 .858-.514L13.783 6H15.5a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5H.5a.5.5 0 0 1-.5-.5v-1A.5.5 0 0 1 .5 6h1.717L5.07 1.243a.5.5 0 0 1 .686-.172zM2.468 15.426.943 9h14.114l-1.525 6.426a.75.75 0 0 1-.729.574H3.197a.75.75 0 0 1-.73-.574z" />
                                </svg>
                                Add
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
        }
    </div>

}
else
{
    <h1 class="text-dark">Currently there aren't any products. If you are the admin you can create some....</h1>
}

@{
    var previousPage = Model.CurrentPage - 1;

    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalProductsCount / AllProductsQueryModel.ProductsPerPage);
}

@{
    var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
    !Model.Products.Any();
}

<nav aria-label="Products results" class="mt-4 bg-dark text-white">
    <ul class="pagination pagination-lg justify-content-center" style="width: auto;font-size:18px">
        <li class="page-item text-white"><a class="page-link @(Model.CurrentPage == 1 ? "disabled" : string.Empty)" asp-controller="Product" asp-action="Index" asp-route-currentPage="@previousPage">Previous</a></li>
        @for (int i = 1; i <= (int)maxPage; i++)
        {
            <li class="page-item text-white"><a class="page-link" asp-controller="Product" asp-action="Index" asp-route-currentPage="@i">@i</a></li>
        }
        <li class="page-item text-white"><a class="page-link @(shouldButtonBeDisabled ? "disabled" : string.Empty)" asp-controller="Product" asp-action="Index" asp-route-currentPage="@(Model.CurrentPage + 1)">Next</a></li>
    </ul>
</nav>